// class Solution {
// public:
//     int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
//         vector<int> possibleIndex;
//         int n = gas.size();

//         for(int i = 0 ; i < n ; i++){
//             if(cost[i] <= gas[i]){
//                 possibleIndex.push_back(i);
//             }
//         }

//         if(possibleIndex.size() == 0)
//             return -1;
           
//         for(auto x : possibleIndex){
//             int flag = 0;
//             long long tank = gas[x];
//             int j = x;
//             for(int k = 0 ; k < n - 1 ; k++, j++){
//                 if(tank < cost[j % n]){
//                     flag = -1;
//                     break;
//                 }
//                 tank = tank - cost[j % n] + gas[(j + 1) % n];
//             }
 
//             if(flag == -1)
//                 continue;

//             if(tank >= cost[j % n])
//                 return x;
//         }
//         return -1;
//     }
// };

class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int n=gas.size();
        int total_gas=0,total_cost=0;
        int curr_gas=0, starting_point=0;

        for(int i=0;i<n;i++)
        {
            total_gas += gas[i];
            total_cost += cost[i];
            curr_gas += gas[i] - cost[i];

            if(curr_gas < 0)
            {
                starting_point = i + 1;
                curr_gas = 0;
            }
        }
        return (total_gas < total_cost) ? -1 : starting_point;     
    }
};
